// <auto-generated />
using System;
using FoodOrderingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodOrderingApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250410185543_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodOrderingApi.Model.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("FoodOrderingApi.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "South Indian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "North Indian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fast Food"
                        });
                });

            modelBuilder.Entity("FoodOrderingApi.Model.ClientUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientUsers");
                });

            modelBuilder.Entity("FoodOrderingApi.Model.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Masala Dosa",
                            Price = 60m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Idli Sambar",
                            Price = 40m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Paneer Butter Masala",
                            Price = 150m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Chole Bhature",
                            Price = 90m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "Veg Manchurian",
                            Price = 120m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Hakka Noodles",
                            Price = 110m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Cheese Burger",
                            Price = 80m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "French Fries",
                            Price = 50m,
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("FoodOrderingApi.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodOrderingApi.Model.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Andhra Spice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Delhi Tadka"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wok This Way"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Burger Factory"
                        });
                });

            modelBuilder.Entity("FoodOrderingApi.Model.FoodItem", b =>
                {
                    b.HasOne("FoodOrderingApi.Model.Category", "Category")
                        .WithMany("FoodItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodOrderingApi.Model.Restaurant", "Restaurant")
                        .WithMany("FoodItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodOrderingApi.Model.Category", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("FoodOrderingApi.Model.Restaurant", b =>
                {
                    b.Navigation("FoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
